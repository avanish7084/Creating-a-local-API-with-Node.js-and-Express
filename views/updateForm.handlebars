<!DOCTYPE html>
<html>

<head>
    <style>
        #registrationForm {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

        /* Style for input labels */
        label {
            font-weight: bold;
        }

        /* Style for text inputs */
        input[type="text"],
        input[type="email"] {
            width: 100%;
            padding: 8px;
            margin: 8px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .buttons-container {
            text-align: center;
            margin-top: 10%;
        }

        /* Style for the buttons */
        .form-button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin: 0 10px;
        }

        .form-button:hover {
            background-color: #0056b3;
        }

        /* Style for the submit button */
            {
                {
                !-- #submitButton {
                    display: block;
                    margin: 0 auto;
                    background-color: #007bff;
                    color: white;
                    padding: 10px 20px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                }

                #submitButton:hover {
                    background-color: #0056b3;
                }

                --
            }
        }

        /* Style for the status message */
        #statusMessage {
            margin-top: 10px;
            font-size: 14px;
        }
    </style>
</head>

<body>
    <div id="registrationForm">
        <label for="userId">User ID:</label>
        <input type="text" id="userId" name="userId" readonly><br>
        <label for="firstName">First Name:</label>
        <input type="text" id="firstName" name="firstName" required><br>
        <label for="lastName">Last Name:</label>
        <input type="text" id="lastName" name="lastName" required><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>
        <div class="buttons-container">
            <input type="button" class="form-button" id="updateButton" value="Update">
        </div>
        <div id="statusMessage"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const userIdInput = document.getElementById('userId');
            const firstNameInput = document.getElementById('firstName');
            const lastNameInput = document.getElementById('lastName');
            const emailInput = document.getElementById('email');
            const updateButton = document.getElementById('updateButton');
            const statusMessage = document.getElementById('statusMessage');

            // Retrieve data from query parameters
            const queryParams = new URLSearchParams(window.location.search);
            const userId = queryParams.get('userId');
            const firstName = queryParams.get('firstName');
            const lastName = queryParams.get('lastName');
            const email = queryParams.get('email');

            // Pre-fill form fields with query parameter values
            userIdInput.value = userId;
            firstNameInput.value = firstName;
            lastNameInput.value = lastName;
            emailInput.value = email;

            updateButton.addEventListener('click', async () => {
                // Get updated data from form fields
                const updatedData = {
                    userId: userIdInput.value,
                    firstName: firstNameInput.value,
                    lastName: lastNameInput.value,
                    email: emailInput.value
                };

                try {
                    const response = await fetch(`/api/update/${userId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(updatedData)
                    });

                    if (response.ok) {
                        statusMessage.textContent = 'Data updated successfully!';
                        statusMessage.style.color = 'green';
                        // Perform further actions if needed
                    } else {
                        const responseData = await response.json();
                        console.error('Error updating data:', responseData.error);
                        statusMessage.textContent = 'Error updating data: ' + responseData.error;
                        statusMessage.style.color = 'red';
                    }
                } catch (error) {
                    console.error('An error occurred:', error);
                    statusMessage.textContent = 'An error occurred. Please try again later.';
                    statusMessage.style.color = 'red';
                }
            });
        });
    </script>
</body>

</html>
